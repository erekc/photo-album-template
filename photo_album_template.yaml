AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for Photo Album
Parameters:
    Description: OAuthToken for GitHub Repo
    Type: String
Resources:
    PhotoElasticSearch:
        Type: 'AWS::Elasticsearch::Domain'
        Properties:
            DomainName: photos
            ElasticsearchVersion: '7.4'
            AccessPolicies:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            AWS:
                                -   '*'
                        Action:
                            -   'es:*'
                        Resource: !Sub arn:aws:es:us-east-1:${AWS::AccountId}:domain/photos/*
                    -   Effect: Allow
                        Principal:
                            AWS:
                                -   '*'
                        Action:
                            -   'es:*'
                        Condition:
                            IpAddress:
                                aws:SourceIp:
                                    -   '0.0.0.0/0'
                        Resource: !Sub arn:aws:es:us-east-1:${AWS::AccountId}:domain/photos/*
            ElasticsearchClusterConfig:
                InstanceType: t2.small.elasticsearch
                InstanceCount: 2
                DedicatedMasterEnabled: TRUE
                DedicatedMasterType: t2.small.elasticsearch
                DedicatedMasterCount: 3
                ZoneAwarenessConfig:
                    AvailabilityZoneCount: 2
                ZoneAwarenessEnabled: TRUE
            EBSOptions:
                EBSEnabled: TRUE
                VolumeSize: 10
                VolumeType: gp2
    FrontendCognito:
        Type: AWS::Cognito::IdentityPool
        Properties:
            IdentityPoolName: photoalbumcf
            AllowUnauthenticatedIdentities: TRUE
    UnauthCognitoRole:
        Type: AWS::IAM::Role
        Properties:
            Description: Unauthenticated Cognito role for Photo Album
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Federated: cognito-identity.amazonaws.com
                        Action: sts:AssumeRoleWithWebIdentity
                        Condition:
                            StringEquals:
                                cognito-identity.amazonaws.com:aud: !Ref FrontendCognito
                            ForAnyValue:StringLike:
                                cognito-identity.amazonaws.com:amr: unauthenticated
            Policies:
                -   PolicyName: OneClickCognitoPhotoAlbumUnauthRole
                    PolicyDocument:
                        Version: 2012-10-17
                        Statement:
                            -   Effect: Allow
                                Action:
                                    -   mobileanalytics:PutEvents
                                    -   cognito-sync:*
                                Resource:
                                    -   '*'
                -   PolicyName: b2-access
                    PolicyDocument:
                        Version: 2012-10-17
                        Statement:
                            -   Effect: Allow
                                Action:
                                    -   s3:DeleteObject
                                    -   s3:GetObject
                                    -   s3:ListBucket
                                    -   s3:PutObject
                                    -   s3:PutObjectAcl
                                Resource:
                                    -   arn:aws:s3:::pa-b2
                                    -   arn:aws:s3:::pa-b2/*
                                    -   arn:aws:s3:::npab2
                                    -   arn:aws:s3:::npab2/*
    AuthCognitoRole:
        Type: AWS::IAM::Role
        Properties:
            Description: Authenticated Cognito Role for photo album
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Federated: cognito-identity.amazonaws.com
                        Action: sts:AssumeRoleWithWebIdentity
                        Condition:
                            StringEquals:
                                cognito-identity.amazonaws.com:aud: !Ref FrontendCognito
                            ForAnyValue:StringLike:
                                cognito-identity.amazonaws.com:amr: authenticated
            Policies:
                -   PolicyName: OneClickCognitoPhotoAlbumUnauthRole
                    PolicyDocument:
                        Version: 2012-10-17
                        Statement:
                            -   Effect: Allow
                                Action:
                                    -   mobileanalytics:PutEvents
                                    -   cognito-sync:*
                                    -   cognito-identity:*
                                Resource:
                                    -   '*'
    BackendPipelineRole:
        Type: AWS::IAM::Role
        Properties:
            Description: Role for backend pipeline
            Path: /service-role/
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Service: codepipeline.amazonaws.com
                        Action: sts:AssumeRole
    BackendPipelineManagedPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            Description: Managed policy for backendpipelinerole
            Path: /service-role/
            Roles:
                -   !Ref BackendPipelineRole
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -   Action:
                            -   'iam:PassRole'
                        Resource: '*'
                        Effect: Allow
                        Condition:
                            StringEqualsIfExists:
                                iam:PassedToService:
                                    -   cloudformation.amazonaws.com
                                    -   elasticbeanstalk.amazonaws.com
                                    -   ec2.amazonaws.com
                                    -   ecs-tasks.amazonaws.com
                    -   Action:
                            -   'codecommit:CancelUploadArchive'
                            -   'codecommit:GetBranch'
                            -   'codecommit:GetCommit'
                            -   'codecommit:GetUploadArchiveStatus'
                            -   'codecommit:UploadArchive'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'codedeploy:CreateDeployment'
                            -   'codedeploy:GetApplication'
                            -   'codedeploy:GetApplicationRevision'
                            -   'codedeploy:GetDeployment'
                            -   'codedeploy:GetDeploymentConfig'
                            -   'codedeploy:RegisterApplicationRevision'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'codestar-connections:UseConnection'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'elasticbeanstalk:*'
                            -   'ec2:*'
                            -   'elasticloadbalancing:*'
                            -   'autoscaling:*'
                            -   'cloudwatch:*'
                            -    's3:*'
                            -   'sns:*'
                            -   'cloudformation:*'
                            -   'rds:*'
                            -   'sqs:*'
                            -   'ecs:*'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'lambda:InvokeFunction'
                            -   'lambda:ListFunctions'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'opsworks:CreateDeployment'
                            -   'opsworks:DescribeApps'
                            -   'opsworks:DescribeCommands'
                            -   'opsworks:DescribeDeployments'
                            -   'opsworks:DescribeInstances'
                            -   'opsworks:DescribeStacks'
                            -   'opsworks:UpdateApp'
                            -   'opsworks:UpdateStack'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'cloudformation:CreateStack'
                            -   'cloudformation:DeleteStack'
                            -   'cloudformation:DescribeStacks'
                            -   'cloudformation:UpdateStack'
                            -   'cloudformation:CreateChangeSet'
                            -   'cloudformation:DeleteChangeSet'
                            -   'cloudformation:DescribeChangeSet'
                            -   'cloudformation:ExecuteChangeSet'
                            -   'cloudformation:SetStackPolicy'
                            -   'cloudformation:ValidateTemplate'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'codebuild:BatchGetBuilds'
                            -   'codebuild:StartBuild'
                        Resource: '*'
                        Effect: Allow
                    -   Effect: Allow
                        Action:
                            -   'devicefarm:ListProjects'
                            -   'devicefarm:ListDevicePools'
                            -   'devicefarm:GetRun'
                            -   'devicefarm:GetUpload'
                            -   'devicefarm:CreateUpload'
                            -   'devicefarm:ScheduleRun'
                        Resource: '*'
                    -   Effect: Allow
                        Action:
                            -   'servicecatalog:ListProvisioningArtifacts'
                            -   'servicecatalog:CreateProvisioningArtifact'
                            -   'servicecatalog:DescribeProvisioningArtifact'
                            -   'servicecatalog:DeleteProvisioningArtifact'
                            -   'servicecatalog:UpdateProduct'
                        Resource: '*'
                    -   Effect: Allow
                        Action:
                            -   'cloudformation:ValidateTemplate'
                        Resource: '*'
                    -   Effect: Allow
                        Action:
                            -   'ecr:DescribeImages'
                        Resource: '*'
    FrontendPipelineRole:
        Type: AWS::IAM::Role
        Properties:
            Description: Role for frontend pipeline
            Path: /service-role/
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Service: codepipeline.amazonaws.com
                        Action: sts:AssumeRole
    FrontendPipelineManagedPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            Description: Managed policy for frontendpipelinerole
            Path: /service-role/
            Roles:
                -   !Ref FrontendPipelineRole
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -   Action:
                            -   'iam:PassRole'
                        Resource: '*'
                        Effect: Allow
                        Condition:
                            StringEqualsIfExists:
                                iam:PassedToService:
                                    -   cloudformation.amazonaws.com
                                    -   elasticbeanstalk.amazonaws.com
                                    -   ec2.amazonaws.com
                                    -   ecs-tasks.amazonaws.com
                    -   Action:
                            -   'codecommit:CancelUploadArchive'
                            -   'codecommit:GetBranch'
                            -   'codecommit:GetCommit'
                            -   'codecommit:GetUploadArchiveStatus'
                            -   'codecommit:UploadArchive'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'codedeploy:CreateDeployment'
                            -   'codedeploy:GetApplication'
                            -   'codedeploy:GetApplicationRevision'
                            -   'codedeploy:GetDeployment'
                            -   'codedeploy:GetDeploymentConfig'
                            -   'codedeploy:RegisterApplicationRevision'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'codestar-connections:UseConnection'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'elasticbeanstalk:*'
                            -   'ec2:*'
                            -   'elasticloadbalancing:*'
                            -   'autoscaling:*'
                            -   'cloudwatch:*'
                            -    's3:*'
                            -   'sns:*'
                            -   'cloudformation:*'
                            -   'rds:*'
                            -   'sqs:*'
                            -   'ecs:*'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'lambda:InvokeFunction'
                            -   'lambda:ListFunctions'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'opsworks:CreateDeployment'
                            -   'opsworks:DescribeApps'
                            -   'opsworks:DescribeCommands'
                            -   'opsworks:DescribeDeployments'
                            -   'opsworks:DescribeInstances'
                            -   'opsworks:DescribeStacks'
                            -   'opsworks:UpdateApp'
                            -   'opsworks:UpdateStack'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'cloudformation:CreateStack'
                            -   'cloudformation:DeleteStack'
                            -   'cloudformation:DescribeStacks'
                            -   'cloudformation:UpdateStack'
                            -   'cloudformation:CreateChangeSet'
                            -   'cloudformation:DeleteChangeSet'
                            -   'cloudformation:DescribeChangeSet'
                            -   'cloudformation:ExecuteChangeSet'
                            -   'cloudformation:SetStackPolicy'
                            -   'cloudformation:ValidateTemplate'
                        Resource: '*'
                        Effect: Allow
                    -   Action:
                            -   'codebuild:BatchGetBuilds'
                            -   'codebuild:StartBuild'
                        Resource: '*'
                        Effect: Allow
                    -   Effect: Allow
                        Action:
                            -   'devicefarm:ListProjects'
                            -   'devicefarm:ListDevicePools'
                            -   'devicefarm:GetRun'
                            -   'devicefarm:GetUpload'
                            -   'devicefarm:CreateUpload'
                            -   'devicefarm:ScheduleRun'
                        Resource: '*'
                    -   Effect: Allow
                        Action:
                            -   'servicecatalog:ListProvisioningArtifacts'
                            -   'servicecatalog:CreateProvisioningArtifact'
                            -   'servicecatalog:DescribeProvisioningArtifact'
                            -   'servicecatalog:DeleteProvisioningArtifact'
                            -   'servicecatalog:UpdateProduct'
                        Resource: '*'
                    -   Effect: Allow
                        Action:
                            -   'cloudformation:ValidateTemplate'
                        Resource: '*'
                    -   Effect: Allow
                        Action:
                            -   'ecr:DescribeImages'
                        Resource: '*'
    BackendCodeBuildRole:
        Type: AWS::IAM::Role
        Properties:
            Description: CodeBuild role for backend
            Path: /service-role/
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Service: codebuild.amazonaws.com
                        Action: sts:AssumeRole
            ManagedPolicyArns:
                -   arn:aws:iam::aws:policy/AmazonS3FullAccess
                -   arn:aws:iam::aws:policy/CloudWatchFullAccess
                -   arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
    BackendCodeBuildManagedPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            Description: Managed policy for Backend CodeBuild role
            Path: /service-role/
            Roles:
                - !Ref BackendCodeBuildRole
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -   Effect: Allow
                        Resource:
                            -   !Sub 
                                -   arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/${BCBRole}
                                -   { BCBRole : !Ref BackendCodeBuildRole }
                            -   !Sub
                                -   arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/${BCBRole}:*
                                -   { BCBRole : !Ref BackendCodeBuildRole }
                        Action:
                            -   'logs:CreateLogGroup'
                            -   'logs:CreateLogStream'
                            -   'logs:PutLogEvents'
                    -   Effect: Allow
                        Resource:
                            -   'arn:aws:s3:::codepipeline-us-east-1-*'
                        Action:
                            -   's3:PutObject'
                            -   's3:GetObject'
                            -   's3:GetObjectVersion'
                            -   's3:GetBucketAcl'
                            -   's3:GetBucketLocation'
                    -   Effect: Allow
                        Action:
                            -   'codebuild:CreateReportGroup'
                            -   'codebuild:CreateReport'
                            -   'codebuild:UpdateReport'
                            -   'codebuild:BatchPutTestCases'
                        Resource:
                            -   !Sub
                                -   arn:aws:codebuild:us-east-1:${AWS::AccountId}:report-group/${BCBRole}-*
                                -   { BCBRole : !Ref BackendCodeBuildRole }
    
    FrontendCodeBuildRole:
        Type: AWS::IAM::Role
        Properties:
            Description: CodeBuild role for frontend
            Path: /service-role/
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    -   Effect: Allow
                        Principal:
                            Service: codebuild.amazonaws.com
                        Action: sts:AssumeRole
            ManagedPolicyArns:
                -   arn:aws:iam::aws:policy/AmazonS3FullAccess
                -   arn:aws:iam::aws:policy/CloudWatchFullAccess
                -   arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
    FrontendCodeBuildManagedPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            Description: Managed policy for Frontend CodeBuild role
            Path: /service-role/
            Roles:
                - !Ref FrontendCodeBuildRole
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    -   Effect: Allow
                        Resource:
                            -   !Sub 
                                -   arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/${FCBRole}
                                -   { FCBRole : !Ref FrontendCodeBuildRole }
                            -   !Sub
                                -   arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/codebuild/${FCBRole}:*
                                -   { FCBRole : !Ref FrontendCodeBuildRole }
                        Action:
                            -   'logs:CreateLogGroup'
                            -   'logs:CreateLogStream'
                            -   'logs:PutLogEvents'
                    -   Effect: Allow
                        Resource:
                            -   'arn:aws:s3:::codepipeline-us-east-1-*'
                        Action:
                            -   's3:PutObject'
                            -   's3:GetObject'
                            -   's3:GetObjectVersion'
                            -   's3:GetBucketAcl'
                            -   's3:GetBucketLocation'
                    -   Effect: Allow
                        Action:
                            -   'codebuild:CreateReportGroup'
                            -   'codebuild:CreateReport'
                            -   'codebuild:UpdateReport'
                            -   'codebuild:BatchPutTestCases'
                        Resource:
                            -   !Sub
                                -   arn:aws:codebuild:us-east-1:${AWS::AccountId}:report-group/${FCBRole}-*
                                -   { FCBRole : !Ref FrontendCodeBuildRole }
    BackendCodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            Artifacts:
                Type: CODEPIPELINE
            Description: CodeBuild for backend
            EncryptionKey: !Sub arn:aws:kms:us-east-1:${AWS::AccountId}:alias/aws/s3
            Source: CODEPIPELINE
            Environment:
                ComputeType: BUILD_GENERAL1_SMALL
                Image: 'aws/codebuild/amazonlinux2-x86_64-standard:1.0'
                ImagePullCredentialsType: CODEBUILD
                PrivilegedMode: FALSE
                Type: LINUX_CONTAINER
            LogsConfig:
                CloudWatchLogs:
                    Status: ENABLED
                S3Logs:
                    Status: DISABLED
                    EncryptionDisabled: FALSE
            Name: BackendCodeBuild
            QueuedTimeoutInMinutes: 480
            TimeoutInMinutes: 60
            ServiceRole: !GetAtt BackendCodeBuildRole.Arn
            Source:
                GitCloneDepth: 0
                Type: CODEPIPELINE
    FrontendCodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            Artifacts:
                Type: CODEPIPELINE
            Description: CodeBuild for frontend
            EncryptionKey: !Sub arn:aws:kms:us-east-1:${AWS::AccountId}:alias/aws/s3
            Source: CODEPIPELINE
            Environment:
                ComputeType: BUILD_GENERAL1_SMALL
                Image: 'aws/codebuild/amazonlinux2-x86_64-standard:1.0'
                ImagePullCredentialsType: CODEBUILD
                PrivilegedMode: FALSE
                Type: LINUX_CONTAINER
            LogsConfig:
                CloudWatchLogs:
                    Status: ENABLED
                S3Logs:
                    Status: DISABLED
                    EncryptionDisabled: FALSE
            Name: FrontendCodeBuild
            QueuedTimeoutInMinutes: 480
            TimeoutInMinutes: 60
            ServiceRole: !GetAtt FrontendCodeBuildRole.Arn
            Source:
                GitCloneDepth: 0
                Type: CODEPIPELINE
    BackendPipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            Name: pa-backend-2
            RoleArn: !GetAtt BackendPipelineRole.Arn
            ArtifactStore:
                Type: S3
                Location: pa-lambda-pipeline
            RestartExecutionOnUpdate: TRUE
            Stages:
                -   Name: Source
                    Actions:
                        -   Name: Source
                            ActionTypeId:
                                Category: Source
                                Owner: ThirdParty
                                Provider: GitHub
                                Version: '1'
                            OutputArtifacts:
                                -   Name: SourceArtifact
                            RunOrder: 1
                            Configuration:
                                Owner: erekc
                                Repo: photo-album-backend
                                PollForSourceChanges: False
                                Branch: master
                                OAuthToken: !Ref OAuthToken
                -   Name: Build
                    Actions:
                        -   Name: Build
                            ActionTypeId:
                                Category: Build
                                Owner: AWS
                                Provider: CodeBuild
                                Version: '1'
                            RunOrder: 1
                            Configuration:
                                ProjectName: !Ref BackendCodeBuildProject
                                PrimarySource: SourceArtifact
                            OutputArtifacts:
                                -   Name: BuildArtifact
                            InputArtifacts:
                                -   Name: SourceArtifact
                -   Name: Deploy
                    Actions:
                        -   Name: Deploy
                            ActionTypeId:
                                Category: Deploy
                                Owner: AWS
                                Provider: CloudFormation
                                Version: '1'
                            RunOrder: 1
                            Configuration:
                                ActionMode: CHANGE_SET_REPLACE
                                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                                ChangeSetName: backend-pipeline-changeset
                                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/BackendCFRole
                                StackName: backend-pipeline-stack
                                TemplatePath: BuildArtifact::outputsamtemplate.yml
                            InputArtifacts:
                                -   Name: BuildArtifact
                        -   Name: Execute-Changeset
                            ActionTypeId:
                                Category: Deploy
                                Owner: AWS
                                Provider: CloudFormation
                                Version: '1'
                            RunOrder: 2
                            Configuration:
                                ActionMode: CHANGE_SET_EXECUTE
                                ChangeSetName: backend-pipeline-changeset
                                StackName: backend-pipeline-stack
                            InputArtifacts:
                                - Name: BuildArtifact
    FrontendPipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            Name: pa-frontend-2
            RoleArn: !GetAtt FrontendPipelineRole.Arn
            ArtifactStore:
                Type: S3
                Location: pa-frontend-pipeline
            RestartExecutionOnUpdate: TRUE
            Stages:
                -   Name: Source
                    Actions:
                        -   Name: Source
                            ActionTypeId:
                                Category: Source
                                Owner: ThirdParty
                                Provider: GitHub
                                Version: '1'
                            OutputArtifacts:
                                -   Name: SourceArtifact
                            RunOrder: 1
                            Configuration:
                                Owner: erekc
                                Repo: photo-album-frontend
                                PollForSourceChanges: FALSE
                                Branch: master
                                OAuthToken: !Ref OAuthToken
                -   Name: Build
                    Actions:
                        -   Name: Build
                            ActionTypeId:
                                Category: Build
                                Owner: AWS
                                Provider: CodeBuild
                                Version: '1'
                            RunOrder: 1
                            Configuration:
                                ProjectName: !Ref FrontendCodeBuildProject
                                PrimarySource: SourceArtifact
                            OutputArtifacts:
                                -   Name: BuildArtifact
                            InputArtifacts:
                                -   Name: SourceArtifact
                -   Name: Deploy
                    Actions:
                        -   Name: Deploy
                            ActionTypeId:
                                Category: Deploy
                                Owner: AWS
                                Provider: CloudFormation
                                Version: '1'
                            RunOrder: 1
                            Configuration:
                                ActionMode: CHANGE_SET_REPLACE
                                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                                ChangeSetName: frontend-pipeline-changeset
                                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/FrontendCFRole
                                StackName: frontend-pipeline-stack
                                TemplatePath: BuildArtifact::outputsamtemplate2.yml
                            InputArtifacts:
                                -   Name: BuildArtifact
                        -   Name: Execute-Changeset
                            ActionTypeId:
                                Category: Deploy
                                Owner: AWS
                                Provider: CloudFormation
                                Version: '1'
                            RunOrder: 2
                            Configuration:
                                ActionMode: CHANGE_SET_EXECUTE
                                ChangeSetName: frontend-pipeline-changeset
                                StackName: frontend-pipeline-stack
                            InputArtifacts:
                                - Name: BuildArtifact
                -   Name: Push-Frontend
                    Actions:
                        -   Name: Deploy-Frontend
                            ActionTypeId:
                                Category: Deploy
                                Owner: AWS
                                Provider: S3
                                Version: '1'
                            RunOrder: 1
                            InputArtifacts:
                                - Name: SourceArtifact
                            Configuration:
                                BucketName: ai-photo-album2.com
                                Extract: TRUE
                                
                                